<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!-- 
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="transactionAdvisor"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="read*" read-only="true" />
			<tx:method name="update*" rollback-for="RuntimeException" />
			<tx:method name="regist*" rollback-for="RuntimeException" />
			<tx:method name="create*" rollback-for="RuntimeException" />
			<tx:method name="delete*" rollback-for="RuntimeException" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut
			expression="execution ( * com.ktds.log.statistics.*.*(..) )"
			id="transactionPointcut" />
		<aop:advisor advice-ref="transactionAdvisor"
			pointcut-ref="transactionPointcut" />
	</aop:config>
 -->
	<!-- DBCP 설정 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">

		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:XE" />
		<property name="username" value="PROJECT" />
		<property name="password" value="PROJECT" />
	</bean>

	<!-- spring jdbc 생성 -->
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Java와 Database를 연동 시켜주는 객체 SqlSession == Database와 연결되어있는 객체 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations"
			value="classpath:spring/*Dao.xml" />
		<property name="configLocation" value="classpath:spring/mybatis.xml" />
	</bean>

	<!-- Query(insert, Select, Update, Delete)쿼리가 수행될 수 있도록 코드를 미리 짜놓은 객체 Like 
		Sql.java -->
	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory" />
	</bean>


</beans>
